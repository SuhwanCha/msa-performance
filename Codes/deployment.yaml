apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
  labels:
    app: spring-boot
spec:
  selector:
    matchLabels:
      app: spring-boot
  replicas: 10
  template:
    metadata:
      labels:
        app: spring-boot
    spec:
      containers:
        - name: service-a
          image: gcr.io/msa-performace/service-a@sha256:9e357efaea73a1f9c3440cb7d68275d0db01f16287950f4e75316992756750d5
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          imagePullPolicy: Always
          ports:
            - containerPort: 8800

---
apiVersion: v1
kind: Service
metadata:
  name: service-a
spec:
  selector:
    app: spring-boot
  type: NodePort
  ports:
    - name: http
      port: 8800
      targetPort: 8800
      protocol: TCP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka-cm
data:
  # if you want to deploy n instances of eureka cluster,
  # you should set eureka_service_address: http://eureka-0.eureka:8761/eureka,...,http://eureka-(n-1).eureka:8761/eureka
  eureka_service_address: http://eureka-0.eureka:8761/eureka,http://eureka-1.eureka:8761/eureka,http://eureka-2.eureka:8761/eureka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eureka
  labels:
    app: eureka
spec:
  serviceName: "eureka"
  selector:
    matchLabels:
      app: eureka
  replicas: 1
  template:
    metadata:
      labels:
        app: eureka
    spec:
      containers:
        - name: eureka
          image: gcr.io/msa-performace/eureka@sha256:5f9b967fbc08e0043dff4353a0107d2ace5180a0aff2da92642cd8abba88bfc4
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          imagePullPolicy: Always
          ports:
            - containerPort: 8761
          env:
            - name: EUREKA_SERVER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: eureka-cm
                  key: eureka_service_address
            - name: ENVIRONMENT
              value: "prod"
            - name: JVM_OPTS
              value: "-Xms1g -Xmx1g"

---
apiVersion: v1
kind: Service
metadata:
  name: eureka-lb
  labels:
    app: eureka
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing

spec:
  selector:
    app: eureka
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8761
---
apiVersion: v1
kind: Service
metadata:
  name: eureka
  labels:
    app: eureka
spec:
  clusterIP: None
  ports:
    - port: 8761
      name: eureka
  selector:
    app: eureka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zuul
  labels:
    app: zuul
spec:
  selector:
    matchLabels:
      app: zuul
  replicas: 2
  template:
    metadata:
      labels:
        app: zuul
    spec:
      containers:
        - name: zuul
          image: gcr.io/msa-performace/zuul@sha256:c6a58b11d4751b97bea094905926860390e4f8664600754a29047077283feb62
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          imagePullPolicy: Always
          ports:
            - containerPort: 8081

---
apiVersion: v1
kind: Service
metadata:
  name: zuul

spec:
  externalTrafficPolicy: Cluster
  selector:
    app: zuul
  ports:
    - name: http
      port: 8081
      targetPort: 8081
      protocol: TCP

  type: LoadBalancer

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: service-a-hpa
spec:
  maxReplicas: 30
  minReplicas: 10
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: service-a
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
